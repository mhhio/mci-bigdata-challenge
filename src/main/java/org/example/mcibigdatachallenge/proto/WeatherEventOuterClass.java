// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/weather_event.proto
// Protobuf Java Version: 4.26.1

package org.example.mcibigdatachallenge.proto;

public final class WeatherEventOuterClass {
  private WeatherEventOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      WeatherEventOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface WeatherEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.example.mcibigdatachallenge.proto.WeatherEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string date_time = 1;</code>
     * @return The dateTime.
     */
    java.lang.String getDateTime();
    /**
     * <code>string date_time = 1;</code>
     * @return The bytes for dateTime.
     */
    com.google.protobuf.ByteString
        getDateTimeBytes();

    /**
     * <code>string city = 2;</code>
     * @return The city.
     */
    java.lang.String getCity();
    /**
     * <code>string city = 2;</code>
     * @return The bytes for city.
     */
    com.google.protobuf.ByteString
        getCityBytes();

    /**
     * <code>double currently_apparent_temperature = 3;</code>
     * @return The currentlyApparentTemperature.
     */
    double getCurrentlyApparentTemperature();

    /**
     * <code>double currently_humidity = 4;</code>
     * @return The currentlyHumidity.
     */
    double getCurrentlyHumidity();

    /**
     * <code>double currently_precip_intensity = 5;</code>
     * @return The currentlyPrecipIntensity.
     */
    double getCurrentlyPrecipIntensity();

    /**
     * <code>double currently_precip_probability = 6;</code>
     * @return The currentlyPrecipProbability.
     */
    double getCurrentlyPrecipProbability();

    /**
     * <code>optional string currently_precip_type = 7;</code>
     * @return Whether the currentlyPrecipType field is set.
     */
    boolean hasCurrentlyPrecipType();
    /**
     * <code>optional string currently_precip_type = 7;</code>
     * @return The currentlyPrecipType.
     */
    java.lang.String getCurrentlyPrecipType();
    /**
     * <code>optional string currently_precip_type = 7;</code>
     * @return The bytes for currentlyPrecipType.
     */
    com.google.protobuf.ByteString
        getCurrentlyPrecipTypeBytes();

    /**
     * <code>double currently_temperature = 8;</code>
     * @return The currentlyTemperature.
     */
    double getCurrentlyTemperature();

    /**
     * <code>double currently_visibility = 9;</code>
     * @return The currentlyVisibility.
     */
    double getCurrentlyVisibility();

    /**
     * <code>double currently_wind_speed = 10;</code>
     * @return The currentlyWindSpeed.
     */
    double getCurrentlyWindSpeed();
  }
  /**
   * <pre>
   * Define a message for the weather data
   * </pre>
   *
   * Protobuf type {@code org.example.mcibigdatachallenge.proto.WeatherEvent}
   */
  public static final class WeatherEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.example.mcibigdatachallenge.proto.WeatherEvent)
      WeatherEventOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        WeatherEvent.class.getName());
    }
    // Use WeatherEvent.newBuilder() to construct.
    private WeatherEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private WeatherEvent() {
      dateTime_ = "";
      city_ = "";
      currentlyPrecipType_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.internal_static_org_example_mcibigdatachallenge_proto_WeatherEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.internal_static_org_example_mcibigdatachallenge_proto_WeatherEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent.class, org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent.Builder.class);
    }

    private int bitField0_;
    public static final int DATE_TIME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object dateTime_ = "";
    /**
     * <code>string date_time = 1;</code>
     * @return The dateTime.
     */
    @java.lang.Override
    public java.lang.String getDateTime() {
      java.lang.Object ref = dateTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dateTime_ = s;
        return s;
      }
    }
    /**
     * <code>string date_time = 1;</code>
     * @return The bytes for dateTime.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDateTimeBytes() {
      java.lang.Object ref = dateTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dateTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CITY_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object city_ = "";
    /**
     * <code>string city = 2;</code>
     * @return The city.
     */
    @java.lang.Override
    public java.lang.String getCity() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        city_ = s;
        return s;
      }
    }
    /**
     * <code>string city = 2;</code>
     * @return The bytes for city.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCityBytes() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        city_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CURRENTLY_APPARENT_TEMPERATURE_FIELD_NUMBER = 3;
    private double currentlyApparentTemperature_ = 0D;
    /**
     * <code>double currently_apparent_temperature = 3;</code>
     * @return The currentlyApparentTemperature.
     */
    @java.lang.Override
    public double getCurrentlyApparentTemperature() {
      return currentlyApparentTemperature_;
    }

    public static final int CURRENTLY_HUMIDITY_FIELD_NUMBER = 4;
    private double currentlyHumidity_ = 0D;
    /**
     * <code>double currently_humidity = 4;</code>
     * @return The currentlyHumidity.
     */
    @java.lang.Override
    public double getCurrentlyHumidity() {
      return currentlyHumidity_;
    }

    public static final int CURRENTLY_PRECIP_INTENSITY_FIELD_NUMBER = 5;
    private double currentlyPrecipIntensity_ = 0D;
    /**
     * <code>double currently_precip_intensity = 5;</code>
     * @return The currentlyPrecipIntensity.
     */
    @java.lang.Override
    public double getCurrentlyPrecipIntensity() {
      return currentlyPrecipIntensity_;
    }

    public static final int CURRENTLY_PRECIP_PROBABILITY_FIELD_NUMBER = 6;
    private double currentlyPrecipProbability_ = 0D;
    /**
     * <code>double currently_precip_probability = 6;</code>
     * @return The currentlyPrecipProbability.
     */
    @java.lang.Override
    public double getCurrentlyPrecipProbability() {
      return currentlyPrecipProbability_;
    }

    public static final int CURRENTLY_PRECIP_TYPE_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object currentlyPrecipType_ = "";
    /**
     * <code>optional string currently_precip_type = 7;</code>
     * @return Whether the currentlyPrecipType field is set.
     */
    @java.lang.Override
    public boolean hasCurrentlyPrecipType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string currently_precip_type = 7;</code>
     * @return The currentlyPrecipType.
     */
    @java.lang.Override
    public java.lang.String getCurrentlyPrecipType() {
      java.lang.Object ref = currentlyPrecipType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        currentlyPrecipType_ = s;
        return s;
      }
    }
    /**
     * <code>optional string currently_precip_type = 7;</code>
     * @return The bytes for currentlyPrecipType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCurrentlyPrecipTypeBytes() {
      java.lang.Object ref = currentlyPrecipType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currentlyPrecipType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CURRENTLY_TEMPERATURE_FIELD_NUMBER = 8;
    private double currentlyTemperature_ = 0D;
    /**
     * <code>double currently_temperature = 8;</code>
     * @return The currentlyTemperature.
     */
    @java.lang.Override
    public double getCurrentlyTemperature() {
      return currentlyTemperature_;
    }

    public static final int CURRENTLY_VISIBILITY_FIELD_NUMBER = 9;
    private double currentlyVisibility_ = 0D;
    /**
     * <code>double currently_visibility = 9;</code>
     * @return The currentlyVisibility.
     */
    @java.lang.Override
    public double getCurrentlyVisibility() {
      return currentlyVisibility_;
    }

    public static final int CURRENTLY_WIND_SPEED_FIELD_NUMBER = 10;
    private double currentlyWindSpeed_ = 0D;
    /**
     * <code>double currently_wind_speed = 10;</code>
     * @return The currentlyWindSpeed.
     */
    @java.lang.Override
    public double getCurrentlyWindSpeed() {
      return currentlyWindSpeed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(dateTime_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, dateTime_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(city_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, city_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyApparentTemperature_) != 0) {
        output.writeDouble(3, currentlyApparentTemperature_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyHumidity_) != 0) {
        output.writeDouble(4, currentlyHumidity_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyPrecipIntensity_) != 0) {
        output.writeDouble(5, currentlyPrecipIntensity_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyPrecipProbability_) != 0) {
        output.writeDouble(6, currentlyPrecipProbability_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, currentlyPrecipType_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyTemperature_) != 0) {
        output.writeDouble(8, currentlyTemperature_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyVisibility_) != 0) {
        output.writeDouble(9, currentlyVisibility_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyWindSpeed_) != 0) {
        output.writeDouble(10, currentlyWindSpeed_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(dateTime_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, dateTime_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(city_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, city_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyApparentTemperature_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, currentlyApparentTemperature_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyHumidity_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, currentlyHumidity_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyPrecipIntensity_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, currentlyPrecipIntensity_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyPrecipProbability_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, currentlyPrecipProbability_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, currentlyPrecipType_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyTemperature_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, currentlyTemperature_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyVisibility_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, currentlyVisibility_);
      }
      if (java.lang.Double.doubleToRawLongBits(currentlyWindSpeed_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, currentlyWindSpeed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent)) {
        return super.equals(obj);
      }
      org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent other = (org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent) obj;

      if (!getDateTime()
          .equals(other.getDateTime())) return false;
      if (!getCity()
          .equals(other.getCity())) return false;
      if (java.lang.Double.doubleToLongBits(getCurrentlyApparentTemperature())
          != java.lang.Double.doubleToLongBits(
              other.getCurrentlyApparentTemperature())) return false;
      if (java.lang.Double.doubleToLongBits(getCurrentlyHumidity())
          != java.lang.Double.doubleToLongBits(
              other.getCurrentlyHumidity())) return false;
      if (java.lang.Double.doubleToLongBits(getCurrentlyPrecipIntensity())
          != java.lang.Double.doubleToLongBits(
              other.getCurrentlyPrecipIntensity())) return false;
      if (java.lang.Double.doubleToLongBits(getCurrentlyPrecipProbability())
          != java.lang.Double.doubleToLongBits(
              other.getCurrentlyPrecipProbability())) return false;
      if (hasCurrentlyPrecipType() != other.hasCurrentlyPrecipType()) return false;
      if (hasCurrentlyPrecipType()) {
        if (!getCurrentlyPrecipType()
            .equals(other.getCurrentlyPrecipType())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getCurrentlyTemperature())
          != java.lang.Double.doubleToLongBits(
              other.getCurrentlyTemperature())) return false;
      if (java.lang.Double.doubleToLongBits(getCurrentlyVisibility())
          != java.lang.Double.doubleToLongBits(
              other.getCurrentlyVisibility())) return false;
      if (java.lang.Double.doubleToLongBits(getCurrentlyWindSpeed())
          != java.lang.Double.doubleToLongBits(
              other.getCurrentlyWindSpeed())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getDateTime().hashCode();
      hash = (37 * hash) + CITY_FIELD_NUMBER;
      hash = (53 * hash) + getCity().hashCode();
      hash = (37 * hash) + CURRENTLY_APPARENT_TEMPERATURE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCurrentlyApparentTemperature()));
      hash = (37 * hash) + CURRENTLY_HUMIDITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCurrentlyHumidity()));
      hash = (37 * hash) + CURRENTLY_PRECIP_INTENSITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCurrentlyPrecipIntensity()));
      hash = (37 * hash) + CURRENTLY_PRECIP_PROBABILITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCurrentlyPrecipProbability()));
      if (hasCurrentlyPrecipType()) {
        hash = (37 * hash) + CURRENTLY_PRECIP_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getCurrentlyPrecipType().hashCode();
      }
      hash = (37 * hash) + CURRENTLY_TEMPERATURE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCurrentlyTemperature()));
      hash = (37 * hash) + CURRENTLY_VISIBILITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCurrentlyVisibility()));
      hash = (37 * hash) + CURRENTLY_WIND_SPEED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCurrentlyWindSpeed()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Define a message for the weather data
     * </pre>
     *
     * Protobuf type {@code org.example.mcibigdatachallenge.proto.WeatherEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.example.mcibigdatachallenge.proto.WeatherEvent)
        org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.internal_static_org_example_mcibigdatachallenge_proto_WeatherEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.internal_static_org_example_mcibigdatachallenge_proto_WeatherEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent.class, org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent.Builder.class);
      }

      // Construct using org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        dateTime_ = "";
        city_ = "";
        currentlyApparentTemperature_ = 0D;
        currentlyHumidity_ = 0D;
        currentlyPrecipIntensity_ = 0D;
        currentlyPrecipProbability_ = 0D;
        currentlyPrecipType_ = "";
        currentlyTemperature_ = 0D;
        currentlyVisibility_ = 0D;
        currentlyWindSpeed_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.internal_static_org_example_mcibigdatachallenge_proto_WeatherEvent_descriptor;
      }

      @java.lang.Override
      public org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent getDefaultInstanceForType() {
        return org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent.getDefaultInstance();
      }

      @java.lang.Override
      public org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent build() {
        org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent buildPartial() {
        org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent result = new org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.dateTime_ = dateTime_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.city_ = city_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.currentlyApparentTemperature_ = currentlyApparentTemperature_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.currentlyHumidity_ = currentlyHumidity_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.currentlyPrecipIntensity_ = currentlyPrecipIntensity_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.currentlyPrecipProbability_ = currentlyPrecipProbability_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.currentlyPrecipType_ = currentlyPrecipType_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.currentlyTemperature_ = currentlyTemperature_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.currentlyVisibility_ = currentlyVisibility_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.currentlyWindSpeed_ = currentlyWindSpeed_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent) {
          return mergeFrom((org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent other) {
        if (other == org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent.getDefaultInstance()) return this;
        if (!other.getDateTime().isEmpty()) {
          dateTime_ = other.dateTime_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getCity().isEmpty()) {
          city_ = other.city_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.getCurrentlyApparentTemperature() != 0D) {
          setCurrentlyApparentTemperature(other.getCurrentlyApparentTemperature());
        }
        if (other.getCurrentlyHumidity() != 0D) {
          setCurrentlyHumidity(other.getCurrentlyHumidity());
        }
        if (other.getCurrentlyPrecipIntensity() != 0D) {
          setCurrentlyPrecipIntensity(other.getCurrentlyPrecipIntensity());
        }
        if (other.getCurrentlyPrecipProbability() != 0D) {
          setCurrentlyPrecipProbability(other.getCurrentlyPrecipProbability());
        }
        if (other.hasCurrentlyPrecipType()) {
          currentlyPrecipType_ = other.currentlyPrecipType_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (other.getCurrentlyTemperature() != 0D) {
          setCurrentlyTemperature(other.getCurrentlyTemperature());
        }
        if (other.getCurrentlyVisibility() != 0D) {
          setCurrentlyVisibility(other.getCurrentlyVisibility());
        }
        if (other.getCurrentlyWindSpeed() != 0D) {
          setCurrentlyWindSpeed(other.getCurrentlyWindSpeed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                dateTime_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                city_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 25: {
                currentlyApparentTemperature_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                currentlyHumidity_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 41: {
                currentlyPrecipIntensity_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 49: {
                currentlyPrecipProbability_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 58: {
                currentlyPrecipType_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 65: {
                currentlyTemperature_ = input.readDouble();
                bitField0_ |= 0x00000080;
                break;
              } // case 65
              case 73: {
                currentlyVisibility_ = input.readDouble();
                bitField0_ |= 0x00000100;
                break;
              } // case 73
              case 81: {
                currentlyWindSpeed_ = input.readDouble();
                bitField0_ |= 0x00000200;
                break;
              } // case 81
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object dateTime_ = "";
      /**
       * <code>string date_time = 1;</code>
       * @return The dateTime.
       */
      public java.lang.String getDateTime() {
        java.lang.Object ref = dateTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dateTime_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string date_time = 1;</code>
       * @return The bytes for dateTime.
       */
      public com.google.protobuf.ByteString
          getDateTimeBytes() {
        java.lang.Object ref = dateTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dateTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string date_time = 1;</code>
       * @param value The dateTime to set.
       * @return This builder for chaining.
       */
      public Builder setDateTime(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        dateTime_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string date_time = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDateTime() {
        dateTime_ = getDefaultInstance().getDateTime();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string date_time = 1;</code>
       * @param value The bytes for dateTime to set.
       * @return This builder for chaining.
       */
      public Builder setDateTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        dateTime_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object city_ = "";
      /**
       * <code>string city = 2;</code>
       * @return The city.
       */
      public java.lang.String getCity() {
        java.lang.Object ref = city_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          city_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string city = 2;</code>
       * @return The bytes for city.
       */
      public com.google.protobuf.ByteString
          getCityBytes() {
        java.lang.Object ref = city_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          city_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string city = 2;</code>
       * @param value The city to set.
       * @return This builder for chaining.
       */
      public Builder setCity(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        city_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string city = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCity() {
        city_ = getDefaultInstance().getCity();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string city = 2;</code>
       * @param value The bytes for city to set.
       * @return This builder for chaining.
       */
      public Builder setCityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        city_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private double currentlyApparentTemperature_ ;
      /**
       * <code>double currently_apparent_temperature = 3;</code>
       * @return The currentlyApparentTemperature.
       */
      @java.lang.Override
      public double getCurrentlyApparentTemperature() {
        return currentlyApparentTemperature_;
      }
      /**
       * <code>double currently_apparent_temperature = 3;</code>
       * @param value The currentlyApparentTemperature to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentlyApparentTemperature(double value) {

        currentlyApparentTemperature_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>double currently_apparent_temperature = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentlyApparentTemperature() {
        bitField0_ = (bitField0_ & ~0x00000004);
        currentlyApparentTemperature_ = 0D;
        onChanged();
        return this;
      }

      private double currentlyHumidity_ ;
      /**
       * <code>double currently_humidity = 4;</code>
       * @return The currentlyHumidity.
       */
      @java.lang.Override
      public double getCurrentlyHumidity() {
        return currentlyHumidity_;
      }
      /**
       * <code>double currently_humidity = 4;</code>
       * @param value The currentlyHumidity to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentlyHumidity(double value) {

        currentlyHumidity_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>double currently_humidity = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentlyHumidity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        currentlyHumidity_ = 0D;
        onChanged();
        return this;
      }

      private double currentlyPrecipIntensity_ ;
      /**
       * <code>double currently_precip_intensity = 5;</code>
       * @return The currentlyPrecipIntensity.
       */
      @java.lang.Override
      public double getCurrentlyPrecipIntensity() {
        return currentlyPrecipIntensity_;
      }
      /**
       * <code>double currently_precip_intensity = 5;</code>
       * @param value The currentlyPrecipIntensity to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentlyPrecipIntensity(double value) {

        currentlyPrecipIntensity_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>double currently_precip_intensity = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentlyPrecipIntensity() {
        bitField0_ = (bitField0_ & ~0x00000010);
        currentlyPrecipIntensity_ = 0D;
        onChanged();
        return this;
      }

      private double currentlyPrecipProbability_ ;
      /**
       * <code>double currently_precip_probability = 6;</code>
       * @return The currentlyPrecipProbability.
       */
      @java.lang.Override
      public double getCurrentlyPrecipProbability() {
        return currentlyPrecipProbability_;
      }
      /**
       * <code>double currently_precip_probability = 6;</code>
       * @param value The currentlyPrecipProbability to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentlyPrecipProbability(double value) {

        currentlyPrecipProbability_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>double currently_precip_probability = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentlyPrecipProbability() {
        bitField0_ = (bitField0_ & ~0x00000020);
        currentlyPrecipProbability_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object currentlyPrecipType_ = "";
      /**
       * <code>optional string currently_precip_type = 7;</code>
       * @return Whether the currentlyPrecipType field is set.
       */
      public boolean hasCurrentlyPrecipType() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional string currently_precip_type = 7;</code>
       * @return The currentlyPrecipType.
       */
      public java.lang.String getCurrentlyPrecipType() {
        java.lang.Object ref = currentlyPrecipType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          currentlyPrecipType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string currently_precip_type = 7;</code>
       * @return The bytes for currentlyPrecipType.
       */
      public com.google.protobuf.ByteString
          getCurrentlyPrecipTypeBytes() {
        java.lang.Object ref = currentlyPrecipType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          currentlyPrecipType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string currently_precip_type = 7;</code>
       * @param value The currentlyPrecipType to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentlyPrecipType(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        currentlyPrecipType_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional string currently_precip_type = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentlyPrecipType() {
        currentlyPrecipType_ = getDefaultInstance().getCurrentlyPrecipType();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>optional string currently_precip_type = 7;</code>
       * @param value The bytes for currentlyPrecipType to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentlyPrecipTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        currentlyPrecipType_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private double currentlyTemperature_ ;
      /**
       * <code>double currently_temperature = 8;</code>
       * @return The currentlyTemperature.
       */
      @java.lang.Override
      public double getCurrentlyTemperature() {
        return currentlyTemperature_;
      }
      /**
       * <code>double currently_temperature = 8;</code>
       * @param value The currentlyTemperature to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentlyTemperature(double value) {

        currentlyTemperature_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>double currently_temperature = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentlyTemperature() {
        bitField0_ = (bitField0_ & ~0x00000080);
        currentlyTemperature_ = 0D;
        onChanged();
        return this;
      }

      private double currentlyVisibility_ ;
      /**
       * <code>double currently_visibility = 9;</code>
       * @return The currentlyVisibility.
       */
      @java.lang.Override
      public double getCurrentlyVisibility() {
        return currentlyVisibility_;
      }
      /**
       * <code>double currently_visibility = 9;</code>
       * @param value The currentlyVisibility to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentlyVisibility(double value) {

        currentlyVisibility_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>double currently_visibility = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentlyVisibility() {
        bitField0_ = (bitField0_ & ~0x00000100);
        currentlyVisibility_ = 0D;
        onChanged();
        return this;
      }

      private double currentlyWindSpeed_ ;
      /**
       * <code>double currently_wind_speed = 10;</code>
       * @return The currentlyWindSpeed.
       */
      @java.lang.Override
      public double getCurrentlyWindSpeed() {
        return currentlyWindSpeed_;
      }
      /**
       * <code>double currently_wind_speed = 10;</code>
       * @param value The currentlyWindSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentlyWindSpeed(double value) {

        currentlyWindSpeed_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>double currently_wind_speed = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentlyWindSpeed() {
        bitField0_ = (bitField0_ & ~0x00000200);
        currentlyWindSpeed_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.example.mcibigdatachallenge.proto.WeatherEvent)
    }

    // @@protoc_insertion_point(class_scope:org.example.mcibigdatachallenge.proto.WeatherEvent)
    private static final org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent();
    }

    public static org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WeatherEvent>
        PARSER = new com.google.protobuf.AbstractParser<WeatherEvent>() {
      @java.lang.Override
      public WeatherEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<WeatherEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WeatherEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.example.mcibigdatachallenge.proto.WeatherEventOuterClass.WeatherEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_example_mcibigdatachallenge_proto_WeatherEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_example_mcibigdatachallenge_proto_WeatherEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031proto/weather_event.proto\022%org.example" +
      ".mcibigdatachallenge.proto\"\326\002\n\014WeatherEv" +
      "ent\022\021\n\tdate_time\030\001 \001(\t\022\014\n\004city\030\002 \001(\t\022&\n\036" +
      "currently_apparent_temperature\030\003 \001(\001\022\032\n\022" +
      "currently_humidity\030\004 \001(\001\022\"\n\032currently_pr" +
      "ecip_intensity\030\005 \001(\001\022$\n\034currently_precip" +
      "_probability\030\006 \001(\001\022\"\n\025currently_precip_t" +
      "ype\030\007 \001(\tH\000\210\001\001\022\035\n\025currently_temperature\030" +
      "\010 \001(\001\022\034\n\024currently_visibility\030\t \001(\001\022\034\n\024c" +
      "urrently_wind_speed\030\n \001(\001B\030\n\026_currently_" +
      "precip_typeb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_org_example_mcibigdatachallenge_proto_WeatherEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_example_mcibigdatachallenge_proto_WeatherEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_example_mcibigdatachallenge_proto_WeatherEvent_descriptor,
        new java.lang.String[] { "DateTime", "City", "CurrentlyApparentTemperature", "CurrentlyHumidity", "CurrentlyPrecipIntensity", "CurrentlyPrecipProbability", "CurrentlyPrecipType", "CurrentlyTemperature", "CurrentlyVisibility", "CurrentlyWindSpeed", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
